<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://.mybatisorg/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
<!--导入属性配置 jdbc配置文件-->
<properties resource="jdbc.properties"></properties>

<!--指定特定数据库的jdbc驱动jar包的位置  此处需要指明mysql-connector-java-5.1.30.jar的绝对路径，否则会报错！-->
    <classPathEntry location="D:\software\coding\mysql-connector-java-8.0.20.jar"/>

    <context id="default" targetRuntime="MyBatis3">

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />

        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />

    <!-- optional，旨在创建class时，对注释进行控制 -->
    <commentGenerator ><!--type="com.cb.backstage.config.MyCommentGenerator"-->
        <property name="suppressDate" value="true"/>
        <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
        <property name="suppressAllComments" value="false"/>
    </commentGenerator>

        <!-- 使用自定义的插件 -->

    <!--jdbc的数据库连接 -->
    <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://192.168.100.66:3306/chamberlaindb?serverTimezone=UTC"
                    userId="test" password="test">
    </jdbcConnection>

    <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
    <javaTypeResolver>
        <property name="forceBigDecimals" value="false"/>
    </javaTypeResolver>

    <!-- 生成模型model的包名和位置 此处需要根据自己项目做调整-->
    <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
  targetPackage     指定生成的model生成所在的包名
    targetProject     指定在该项目下所在的路径
-->
    <!--<javaModelGenerator targetPackage="com.mmall.pojo" targetProject=".\src\main\java">-->
    <javaModelGenerator targetPackage="com.cb.signupstage.entity" targetProject="./src/main/java">
        <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
        <property name="enableSubPackages" value="false"/>
        <!-- 是否对model添加 构造函数 -->
        <property name="constructorBased" value="true"/>
        <!-- 是否对类CHAR类型的列的数据进行trim操作 （去空）-->
        <property name="trimStrings" value="true"/>
        <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
        <property name="immutable" value="false"/>
    </javaModelGenerator>

    <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
    <!--<sqlMapGenerator targetPackage="mappers" targetProject=".\src\main\resources">-->
    <sqlMapGenerator targetPackage="mapper" targetProject="./src/main/resources">
        <property name="enableSubPackages" value="false"/>
    </sqlMapGenerator>

    <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
        type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
        type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
        type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
-->
       
    <!-- targetPackage：mapper接口dao生成的位置 -->
    <!--<javaClientGenerator type="XMLMAPPER" targetPackage="com.mmall.dao" targetProject=".\src\main\java">-->
    <javaClientGenerator type="XMLMAPPER" targetPackage="com.cb.signupstage.mapper" targetProject="./src/main/java">
        <!-- enableSubPackages:是否让schema作为包的后缀 -->
        <property name="enableSubPackages" value="false"/>
    </javaClientGenerator>

    <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名 -->
    <!--<table tableName="ex_question" domainObjectName="ExQuestionEntity" enableCountByExample="true"
           enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
           selectByExampleQueryId="true">
    </table>-->
        <!--<table tableName="ex_valid_date" domainObjectName="ExValidDateEntity" enableCountByExample="true"
               enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
        </table>
        <table tableName="answer_number" domainObjectName="AnswerNumberEntity" enableCountByExample="true"
               enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
        </table>-->
        <!--<table tableName="sign_ex_way" domainObjectName="SignExWayEntity" enableCountByExample="true"
               enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
        </table>-->
        <!--<table tableName="examination" domainObjectName="ExaminationEntity" enableCountByExample="true"
               enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
        </table>-->
        <!--<table tableName="ex_random" domainObjectName="ExRandomEntity" enableCountByExample="true"
               enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
        </table>-->
        <table tableName="sign_info" domainObjectName="SignInfo" enableCountByExample="sign_info"
               enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>
       <!-- <table tableName="student_info" domainObjectName="StudentInfoEntity" enableCountByExample="true"
               enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="true">
            &lt;!&ndash;test字段&ndash;&gt;
            <columnOverride column="ex_content" javaType="java.lang.String" jdbcType="VARCHAR" />
        </table>-->
    <!--<table tableName="question_level" domainObjectName="QuestionLevelEntity" enableCountByExample="true"
           enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
           selectByExampleQueryId="true">
    </table>-->
    <!--<table tableName="answer" domainObjectName="AnswerEntity" enableCountByExample="true"
           enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
           selectByExampleQueryId="true">
    </table>-->
    <!--<table tableName="user" domainObjectName="User" enableCountByExample="false"
           enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
           selectByExampleQueryId="false">
        &lt;!&ndash; 数据库中该字段的类型是 txt ,不同版本生成对应字体类的属性类型可能不同，因此指定转换类型 &ndash;&gt;

    </table>-->

    <!-- mybatis插件的搭建 -->
</context>
</generatorConfiguration>